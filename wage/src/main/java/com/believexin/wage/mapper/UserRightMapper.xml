<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.believexin.wage.dao.UserRightMapper" >
  <resultMap id="BaseResultMap" type="com.believexin.wage.pojo.UserRight" >
    <id column="C_ID" property="cId" jdbcType="VARCHAR" />
    <result column="C_UserID" property="cUserid" jdbcType="VARCHAR" />
    <result column="N_Type" property="nType" jdbcType="TINYINT" />
    <result column="C_RoleID" property="cRoleid" jdbcType="VARCHAR" />
    <result column="C_RightKey" property="cRightkey" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    C_ID, C_UserID, N_Type, C_RoleID, C_RightKey
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_aty_user_right
    where C_ID = #{cId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_aty_user_right
    where C_ID = #{cId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.believexin.wage.pojo.UserRight" >
    insert into t_aty_user_right (C_ID, C_UserID, N_Type, 
      C_RoleID, C_RightKey)
    values (#{cId,jdbcType=VARCHAR}, #{cUserid,jdbcType=VARCHAR}, #{nType,jdbcType=TINYINT}, 
      #{cRoleid,jdbcType=VARCHAR}, #{cRightkey,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.believexin.wage.pojo.UserRight" >
    insert into t_aty_user_right
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cId != null" >
        C_ID,
      </if>
      <if test="cUserid != null" >
        C_UserID,
      </if>
      <if test="nType != null" >
        N_Type,
      </if>
      <if test="cRoleid != null" >
        C_RoleID,
      </if>
      <if test="cRightkey != null" >
        C_RightKey,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cId != null" >
        #{cId,jdbcType=VARCHAR},
      </if>
      <if test="cUserid != null" >
        #{cUserid,jdbcType=VARCHAR},
      </if>
      <if test="nType != null" >
        #{nType,jdbcType=TINYINT},
      </if>
      <if test="cRoleid != null" >
        #{cRoleid,jdbcType=VARCHAR},
      </if>
      <if test="cRightkey != null" >
        #{cRightkey,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.believexin.wage.pojo.UserRight" >
    update t_aty_user_right
    <set >
      <if test="cUserid != null" >
        C_UserID = #{cUserid,jdbcType=VARCHAR},
      </if>
      <if test="nType != null" >
        N_Type = #{nType,jdbcType=TINYINT},
      </if>
      <if test="cRoleid != null" >
        C_RoleID = #{cRoleid,jdbcType=VARCHAR},
      </if>
      <if test="cRightkey != null" >
        C_RightKey = #{cRightkey,jdbcType=VARCHAR},
      </if>
    </set>
    where C_ID = #{cId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.believexin.wage.pojo.UserRight" >
    update t_aty_user_right
    set C_UserID = #{cUserid,jdbcType=VARCHAR},
      N_Type = #{nType,jdbcType=TINYINT},
      C_RoleID = #{cRoleid,jdbcType=VARCHAR},
      C_RightKey = #{cRightkey,jdbcType=VARCHAR}
    where C_ID = #{cId,jdbcType=VARCHAR}
  </update>
  <select id="getUserRights" resultType="java.lang.String" parameterType="java.lang.String">
  	SELECT
		C_RightKey
	FROM
		t_aty_user_right
	WHERE
		C_UserID = #{userid}
	GROUP BY
		C_RightKey
  </select>
  <select id="getUserRightsByloginid" resultType="java.lang.String" parameterType="java.lang.String">
  	SELECT
		rights.C_RightKey
	FROM
		t_aty_user_right rights
	LEFT JOIN t_aty_user users ON users.C_ID = rights.C_UserID
	WHERE
		users.C_LoginID = #{loginid}
	GROUP BY
		rights.C_RightKey
  </select>
  <delete id="deleteUserRight" parameterType="java.lang.String" >
    delete from t_aty_user_right
    where C_UserID = #{userid,jdbcType=VARCHAR} and C_RightKey = #{rightKey,jdbcType=VARCHAR}
  </delete>
</mapper>